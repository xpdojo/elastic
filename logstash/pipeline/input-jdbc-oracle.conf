# sudo /usr/share/logstash/bin/logstash -f pipeline/input-jdbc-oracle.conf
# sudo /usr/share/logstash/bin/logstash -f pipeline/input-jdbc-oracle.conf --log.level=debug
input {
  # https://www.elastic.co/guide/en/logstash/7.17/plugins-inputs-jdbc.html
  jdbc {
    # https://www.oracle.com/kr/database/technologies/appdev/jdbc-downloads.html
    # https://download.oracle.com/otn-pub/otn_software/jdbc/1916/ojdbc8.jar
    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/ojdbc8.jar"
    jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"

    jdbc_connection_string => "jdbc:oracle:thin:@localhost:1521:orcl"

    jdbc_user => "username"

    jdbc_password => "password"

    jdbc_validate_connection => true

    # https://crontab.guru/
    # schedule을 설정하지 않으면 1번만 실행되는 대신 딜레이없이 데이터를 연속적으로 적재한다.
    # 5초 간격으로 실행한다.
    # schedule => "*/5 * * * * *"
    # 1분 간격으로 실행한다.
    # schedule => "* * * * *"

    lowercase_column_names => true

    # statement => "SELECT 1 FROM DUAL"
    statement_filepath => "/usr/share/logstash/scripts/vehicle_car.sql"

    # 처음 데이터 inject할 경우
    # :sql_last_value가 포함된 조건은 제거한다.
    # 만약 식별자가 같은 데이터를 다시 Injest한다면 최근 데이터로 overwrite된다.
    use_column_value => true
    tracking_column => "ts_update_dtm"
    # only "numeric", "timestamp"
    tracking_column_type => "timestamp"

    # use_column_value를 설정하지 않으면 마지막으로 파이프라인이 실행된 시간
    # sudo mkdir /usr/share/logstash/.meta
    # sudo touch /usr/share/logstash/.meta/.jdbc-oracle-last-run-metadata
    # cat /usr/share/logstash/.meta/.jdbc-oracle-last-run-metadata
    # --- 2022-09-14 06:56:46.067482000 Z
    last_run_metadata_path => "/usr/share/logstash/.meta/.jdbc-oracle-last-run-metadata"
  }
}

filter {

  mutate {
    copy => {
      "v_carcd" => "[@metadata][_id]"
    }
    add_field => {
      "[@metadata][target_index]" => "test-vehicle-car-%{+YYYY.MM.dd}"
    }
    remove_field => [
      "@version",
      "v_update_dtm"
    ]
  }

}

output {
  stdout {
    codec => rubydebug
  }

  # https://www.elastic.co/guide/en/logstash/7.17/plugins-outputs-elasticsearch.html
  elasticsearch {
    cloud_id => ["label:cloud-id"]
    # api_key => "id:key" # need tls
    cloud_auth => "username:password"
    index => "%{[@metadata][target_index]}"
    document_id => "%{[@metadata][_id]}"
  }
}
